//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyCuaHangMayTinh.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Windows.Forms;

    public partial class BanPhim
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public BanPhim()
        {
            this.MayVTs = new HashSet<MayVT>();
        }
    
        public string MaBP { get; set; }
        public string TenBP { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MayVT> MayVTs { get; set; }
        public string autoGenCode()
        {
            using (var context = new Entity())
            {
                var lastQuery = context.BanPhims.OrderByDescending(p => p.MaBP).FirstOrDefault();
                MaBP=lastQuery.MaBP;

                if (lastQuery != null)
                {
                    // Xử lý lastQuery
                    int temp = Convert.ToInt32(MaBP.Substring(2)) +1;
                    string newcode = "BP" + temp.ToString();
                    return newcode;
                }
                else
                {
                    MessageBox.Show("Cơ sở dữ liệu chưa có dữ liệu", "Lỗi tìm kiếm", MessageBoxButtons.OKCancel, MessageBoxIcon.Error);
                    return "BP0";
                }
            }
        }
        public void addData(string Name)
        {
            using (var db = new Entity())
            {
                BanPhim bp = new BanPhim() { MaBP = autoGenCode(), TenBP = Name };
                db.BanPhims.Add(bp);
                db.SaveChanges();
            }
        }
        public void removeData(string ID)
        {
            using (var db = new Entity())
            {
                BanPhim bp = db.BanPhims.Where(p => p.MaBP == ID).SingleOrDefault();
                db.BanPhims.Remove(bp);
                db.SaveChanges();
            }
        }
    }
    
}
